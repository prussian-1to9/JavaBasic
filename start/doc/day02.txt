# day02

[상수와 변수]

1. 상수
	개발자가 프로그램에게 알려주는 (정보)데이터
	상수는 한 번 정하면 수정 할 수 없기 때문에, 선언과 동시에 초기화 해야 한다.
	
		형식 : final 데이터타입 대문자상수명 = 데이터;
	- final 속성은 상수 선언에 있어 필수적이다.
		
	ex.
		System.out.println("Hello");
		의 경우 "Hello"는 상수(리터럴)이다.
			
	+ '리터럴' 꼴의 데이터들은 literal pool이란 장소에 일단 저장한 후 사용되도록 되어 있다.
		
	ex.
		System.out.println("Hello"); 의 명령이 있다면
		
			1. literal pool에 "Hello"라는 데이터 자체가 기억된다.
				- 이 때 literal pool은 메모리 영역이고, 기억되는 데이터는 주소를 갖게 된다.
			2. literal pool에 기억된 데이터를 꺼내서 출력하게 된다.

	이 때 사용 할 수 있는 데이터들의 종류
		1. 정수형
			일반적인 소수점이 없는 숫자
				10	- 10진수
				010	- 8진수
				0x10 - 16진수
				
		2. 실수형
			소수점이 존재하는 숫자
			
				3.14	일반적인 소수 방식
				3.0e5	지수방식 (3.0*10^5)
				
		3. 논리형
			true, false (자바에선 0과 1의 값이 아니다!!!)
			==> '자바에선' 이 외의 논리형은 없다.
			
			boolean bool = true;	//숫자가 아닌 영어로 값을 기입
			
		4. 문자형 : ''사용
			'한 글자'로만 구성된 문자.
			==> 내부적으로는 입력한 문자를 유니코드로 변환해 기억하게 된다.
			
			ex. 'a'-> 97 (ascii 코드 값)
				'\u0000'(실제 유니코드 값) : 0000에 원하는 유니코드 값 기입.
		
		5. 문자열형 : ""사용(기본 데이터 타입은 X, Class 타입임.)
			두 글자 이상으로 구성된 문자.

2-0. 변수를 익히기 전에

	1. 변수의 필요성?
		개발자가 입력한 데이터는 일단 literal pool에 저장되고
		프로그램이 그 데이터를 꺼내 사용하게 된다.
		
		자바의 정보값은 메모리의 주소를 알아야 사용 할 수 있다.
		변수는 literal pool에 기억된 데이터의 주소를 기억해 놓는 역할을 한다.
		이 때, 변수 이름은 이것의 주소가 된다.
		
	2. Stack의 특징 (공간이 그렇게 크기 않음)
		1. 메모리에 별칭을 붙여 사용할 수 있는 영역.
			- 별칭 : 변수 이름
		2. 8개의 영역 중, literal pool 다음으로 가장 작은 영역을 OS에게서 배정받는다.
			-> Stack에 많은 양의 데이터를 보관하면 문제가 생길 수 있다.
			
	3. literal pool에 있는 데이터를 Stack에서 기억하는 법
		1. Stack에 필요한 메모리를 할당 받는다.
			형식 : 데이터타입 변수이름;
			
			==> 데이터 타입 기술의 의미
				- 데이터의 형태 to remember
				- 메모리의 크기 in need
				
			c.f. 데이터 타입에 의한 변수의 분류
				1. 기본형 변수
					자바에서 제공하는 기본 데이터 타입의 데이터를 기억할 변수
			
					*자바의 기본 데이터 타입
						논리형
							boolean : 1byte
						문자형
							char : 2byte
						정수형
							byte : 1byte
							short : byte
							int(java 기본형) : 4byte
							long : 8byte
						실수형
							float : 4byte
							double(java 기본형) : 8byte
				
				2. 참조형 변수 (Reference Type)
					기본형 데이터 외의 모든 데이터를 기억하는 변수(클래스를 기억하는 변수)

	
		2. 대입(기억) 연산자를 이용해 데이터를 기억한다.
			변수이름=데이터;
			ex.
				no = 10;

======================================================
컴퓨터가 숫자를 기록하는 방법~
	
	양수
		2진수로 변환하고 부호비트는 무조건 0을 붙임
		
	음수
		1. 양수로 가정하고 2진수로 변환한다.
		2. 보수화시킨다. (0↔1)
		3. +1 후, 부호비트를 1로 지정해준다.